Entendimento geral

DBAPI
PEP do Python que padroniza como todos
os drives do Python como devem funciona

CORE
Connection Pooling
reservatório de Connection 

Dialetos
saber com qual banco estará lidando
postgres, mysql, mariaDB

Engine
Gerenacia Connection do bancos
A 'Engine' do sqlalchemy é o ponto de contato com banco de dados, estabelecendo e 
gerenciando as conexões. Ela é instanciada através de função create_engine(), que recebe as
credenciais do banco de dados, o endereço de conexão (URI) e configura o pool de conexões

Session
Quando a persistência de dados e consultas ao banco de dados utilizando o ORM, s Session é a 
principal interface. Ela atua como um intermediario entre o aplicativo Python e o banco de dados,
medida pela Engine. A Session é encarregada de todos as trasnsações, fornecendo uma API para conduzi-las

Padrões da sessão
1. Respositório: A sessão atua como um Respositório. A ideia de um Respositório é abstrair
qualquer interação envolvendo persistência de dados
2. Unidade de trabalho: Quando a sessão é aberta, todos os dados inseridos, modificados
ou deletados não são feitos de imediato no banco de dados. Fazendo todas as 
modificações que queremos e executamos uma única ação
3. Mapoeamento de Idendidade: É criado um cache para as entidades que já estão carregadas
na sessão para evitar conexões desnecessárias. 

Schemas/Types
definindo as gerencia o metadado de uma tabela
os metadados das tabelas podem ser descritos por Schemas
e seus determinados tipos

SQL Expression Language
forma de montar varios selects, usando codigo Python

ORM - Object Relation Mapper 
mapeamento de banco de dados

Pool
Uma instrução relativamente cara de IO é criação de conexão com o
banco de dados. Por esse motivo, o sqlalchemy armazena as conexões
em um reservatório de conexões chamados de Pool


ACID
A: atomico / atomicidade
Transação do banco
ou a transação é confirmada commitada ou não acontece e volta ao estado anterior do objeto

sqlalchemy
O sqlalchemy é um ORM. Ele permite que você trabalhe com banco de dados SQL 
de meneira mais natural aos programadores Python. Em vez de escrever consultas SQL cruas, você podem
usar métodos e atributos, Python para manipular seus registro de banco de dados

ORM significa Mapoeamento objeto-relacional. É uma tecnica de programaçao que vincula
(ou mapeia) objetos a registros de banco de dados. Em outras palavras, um ORM permite que você
interaja com seu banco de dados, como se você estivesse trabalhando com objeto Python


